@page
@using Microsoft.AspNetCore.Identity;
@inject SignInManager<AppUser> signInManager;
@inject UserManager<AppUser> UserManager

<script>
    const username = "@User.Identity!.Name";
</script>
<style>
    .main-container {
        display: flex;
        flex-direction: row;
        height: 100vh;
        width: 100vw;
    }

    .contacts-container {
        width: 100%;
        display: flex;
        flex-direction: column;
        overflow-y: auto;
        padding: 10px;
        padding-top: 0;
    }

    .contact-button {
        background-color: white;
        color: #707579;
        border: none;
        outline: none;
        border-radius: 10px;
        padding: 10px;
        text-align: left;
        cursor: pointer;
        display: flex;
        align-items: center;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

        .contact-button:hover {
            color: #707579;
            background-color: #ddd;
        }

    .active-contact {
        background-color: #3390ec;
        color: white;
    }

        .active-contact:hover {
            background-color: #3390ec;
            color: white;
        }

    .contact-avatar, .avatar {
        border-radius: 50%;
        background-color: #1751d0;
        flex-shrink: 0;
    }

    .contact-avatar {
        width: 48px;
        height: 48px;
        margin-right: 10px;
    }

    .avatar {
        width: 32px;
        height: 32px;
        margin-right: 5px;
    }

    .contact-name {
        font-weight: bold;
        flex-grow: 1;
        overflow: hidden;
    }

    .chat-area {
        display: flex;
        flex-direction: column;
        flex-grow: 1;
        overflow: hidden;
        position: relative;
        border-left: 2px solid #dddddd;
        max-width: 70%;
        margin-bottom: 0px;
    }

        .chat-area::before {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-image: radial-gradient(circle at top left, rgb(212, 218, 185), transparent), radial-gradient(circle at top right, rgb(110, 168, 137), transparent), radial-gradient(circle at bottom left, rgb(110, 168, 137), transparent), radial-gradient(circle at bottom right, rgb(209, 214, 141), transparent), url("https://localhost:7262/resources/pattern.svg");
            background-size: 100%; /* Уменьшаем масштаб изображения */
            background-repeat: no-repeat;
            background-position: center;
            z-index: 1;
        }

    .content {
        overflow-y: auto;
        height: 100%;
        overflow-x: hidden;
        position: relative;
        z-index: 2;
        scroll-behavior: smooth; /* добавлено для плавной прокрутки */
        scrollbar-width: none; /* Firefox */
        -ms-overflow-style: none; /* Internet Explorer 10+ */
    }

        .content::-webkit-scrollbar {
            width: 0;
            height: 0;
        }

    .messages {
        display: flex;
        flex-wrap: nowrap;
        flex-direction: column;
        margin-left: 100px;
        margin-right: 100px;
        will-change: transform;
    }

    .input-container {
        display: flex;
        align-items: center;
        padding: 8px;
        background-color: white;
        width: 80%;
        border-radius: 12px;
        z-index: 15;
    }

    .row {
        display: flex;
        align-items: center;
        padding: 10px 0;
    }

    #sendButton, #uploadButton {
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 10px;
        border-radius: 50%;
        border: none;
        outline: none;
        color: #ccc;
        background-color: transparent;
        cursor: pointer;
        transition: color 0.3s;
    }

        #sendButton:disabled, #uploadButton:disabled {
            background-color: transparent;
        }

        #sendButton:hover:enabled, #uploadButton:hover:enabled, #sendButton:enabled {
            color: #3390ec;
            transition: all 0.3s;
        }

        #sendButton i, #uploadButton i {
            font-size: 24px;
        }

    ul#messagesList {
        padding-left: 0;
        margin-bottom: 2px;
    }

    #fileInput {
        display: none;
    }

    dialog {
        display: flex;
        border: none;
        outline: none;
        border-radius: 24px;
    }

    .addUserDialog, .add, .close {
        display: flex;
        border-radius: 24px;
        border: none;
        cursor: pointer;
    }

    dialog input {
        border: 2px solid #ccc;
        outline: none;
        border-radius: 12px;
        transition: all 0.2s;
    }

        dialog input:hover, dialog input:active, dialog input:focus {
            border: 2px solid #1751d0;
            transition: all 0.2s;
        }

    .message-container {
        display: flex;
        align-items: flex-end;
        padding: 2px 10px;
        margin-left: 100px;
        margin-right: 300px;
    }

    .message-image {
        max-width: 200px;
        max-height: 200px;
        background-color: white;
        border-bottom-left-radius: 5px;
        border-top-left-radius: 18px;
        border-bottom-right-radius: 18px;
        border-top-right-radius: 18px;
    }

        .message-image.sent {
            max-width: 200px;
            max-height: 200px;
            border-bottom-left-radius: 18px;
            border-top-left-radius: 18px;
            border-bottom-right-radius: 5px;
            border-top-right-radius: 18px;
        }

    .message-container.sent {
        justify-content: flex-end;
        text-align: right;
        margin-left: 300px;
        margin-right: 100px;
    }

        .message-container.sent .avatar {
            order: 2;
            margin-left: 5px;
            margin-right: 0;
        }

        .message-container.sent .message-content {
            order: 1;
        }

    .message-content {
        font-size: 14px;
        background-color: #e9e9eb;
        border-bottom-left-radius: 18px;
        border-top-left-radius: 18px;
        border-bottom-right-radius: 5px;
        border-top-right-radius: 18px;
        color: black;
        padding: 10px;
        max-width: fit-content;
        min-width: fit-content;
        word-break: break-word;
        line-height: 1.3125;
        text-align: left;
    }

    .message-content-contact {
        font-size: 14px;
        background-color: white;
        border-bottom-left-radius: 5px;
        border-top-left-radius: 18px;
        border-bottom-right-radius: 18px;
        border-top-right-radius: 18px;
        color: black;
        padding: 10px;
        padding-right: 15px;
        max-width: fit-content;
        min-width: fit-content;
        word-break: break-word;
        line-height: 1.3125;
        text-align: left;
    }

    .message-content-contact-image {
        display: flex;
        flex-direction: column;
        font-size: 14px;
        background-color: white;
        border-bottom-left-radius: 5px;
        border-top-left-radius: 18px;
        border-bottom-right-radius: 18px;
        border-top-right-radius: 18px;
        color: black;
        padding: 10px;
        max-width: fit-content;
        min-width: fit-content;
        word-break: break-word;
        line-height: 1.3125;
        text-align: left;
    }

    .message-container.sent .message-content {
        background-color: #daf5d5;
    }

    .message-file {
        background-color: white;
        border-bottom-left-radius: 5px;
        border-top-left-radius: 18px;
        border-bottom-right-radius: 18px;
        border-top-right-radius: 18px;
        padding: 10px;
        max-width: 70%;
        word-wrap: break-word;
        display: inline-block;
    }

        .message-file.sent {
            background-color: #daf5d5;
            border-bottom-left-radius: 18px;
            border-top-left-radius: 18px;
            border-bottom-right-radius: 5px;
            border-top-right-radius: 18px;
            padding: 10px;
            max-width: 70%;
            word-wrap: break-word;
            display: inline-block;
        }

    #messageInput {
        padding: 10px 18px 10px 10px;
        border: none;
        background-color: transparent;
        outline: none;
        width: 100%;
        box-sizing: border-box;
    }

        #messageInput::placeholder {
            color: #ccc;
        }

    .context-menu {
        z-index: 1000;
        background: rgba(255, 255, 255, 0.6);
        backdrop-filter: blur(10px);
        -webkit-backdrop-filter: blur(10px);
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        padding: 5px;
        border-radius: 12px;
        transform: scale(0.5); /* Start from half size */
        transition: opacity 0.3s ease, transform 0.3s ease;
    }

    /* Initial state for the context menu */
    .user-context-menu {
        margin-top: 10px;
        display: none;
        position: absolute;
        z-index: 1200;
        background: rgba(255, 255, 255, 0.6);
        backdrop-filter: blur(10px);
        -webkit-backdrop-filter: blur(10px);
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        padding: 5px;
        border-radius: 12px;
        opacity: 0;
        transform: scale(0.5); /* Start from half size */
        transition: opacity 0.3s ease, transform 0.3s ease;
    }

    /* Keyframes for scaling up animation */
    @@keyframes scaleUp {
        from {
            transform: scale(0.5);
            opacity: 0;
        }

        to {
            transform: scale(1);
            opacity: 1;
        }
    }

    /* Keyframes for scaling down animation */
    @@keyframes scaleDown {
        from {
            transform: scale(1);
            opacity: 1;
        }

        to {
            transform: scale(0.5);
            opacity: 0;
        }
    }

    .context-menu.show {
        display: block;
        animation: scaleUp 0.3s forwards;
    }

    .context-menu.hide {
        animation: scaleDown 0.3s forwards;
    }

    /* Apply the scaling up animation when showing the menu */
    .user-context-menu.show {
        display: block;
        animation: scaleUp 0.3s forwards;
    }

    /* Apply the scaling down animation when hiding the menu */
    .user-context-menu.hide {
        animation: scaleDown 0.3s forwards;
    }


    .menu-list {
        list-style: none;
        padding: 0;
        margin: 0;
    }

        .menu-list li {
            font-size: 12pt;
            align-items: center;
            display: flex;
            padding: 8px 12px;
            cursor: pointer;
            color: #707579;
            transition: all .3s;
        }

        .menu-list label {
            font-size: 12pt;
            font-weight: bold;
            color: #707579;
            align-items: center;
            display: flex;
            padding: 8px 12px;
        }

        .menu-list li:hover {
            background-color: #3390ec;
            color: white;
            transition: all .3s;
        }

    #messages-header {
        display: flex;
        align-items: center;
        padding: 0 10px;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        margin-bottom: 0px;
    }

    .bottom-msg-input {
        display: flex;
        align-items: center;
        justify-content: center;
        margin-bottom: 10px;
    }

    .fixed-button {
        display: flex;
        position: absolute;
        bottom: -500px; /* Расположение кнопки от нижнего края */
        right: 20px; /* Расположение кнопки от правого края */
        background-color: #3390ec;
        color: white;
        border: none;
        padding: 15px;
        cursor: pointer;
        z-index: 1000; /* Высокий z-index для отображения поверх других элементов */
        border-radius: 50%;
        transition: all .3s;
    }

        .fixed-button:hover,
        .fixed-button:active {
            background-color: #1751d0;
            transition: all .3s;
        }

    .search-container {
        display: flex;
        align-items: center;
        padding: 10px;
        background-color: #f4f4f5;
        border-radius: 24px;
        margin: 10px;
        overflow: hidden;
        text-overflow: ellipsis;
        width: 100%;
    }

    #search {
        background-color: transparent;
        border: none;
        outline: none;
        color: #a3adb5;
        padding-left: 10px;
        width: 100%;
    }

        #search::placeholder {
            color: #a3adb5;
        }

    #searchIcon {
        transition: opacity 0.3s ease, transform 0.3s ease;
        align-items: center;
        margin-left: 10px;
        color: #a3adb5;
    }

    .hidden-icon {
        opacity: 0;
        transform: scale(0.5);
    }

    #contacts-field {
        display: flex;
        flex-direction: column;
        width: 30%;
        position: relative;
    }

        #contacts-field.no-data {
            background-image:
        }

    .fixed-button.no-hidden {
        bottom: 20px; /* Расположение кнопки от нижнего края */
    }

    #chat-header {
        z-index: 900;
        display: none;
        width: 100%;
        align-items: center;
        padding: 10px;
        background-color: white;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .user-menu {
        display: flex;
        align-items: center;
        width: 100%;
    }

    #burger {
        display: flex;
        border-radius: 50%;
        padding: 10px;
        color: #aeb7be;
        background-color: transparent;
        border: none;
        outline: none;
        margin-left: 10px;
        transition: all 0.3s;
        margin-bottom: 10px;
        margin-top: 10px;
    }

        #burger:hover,
        #burger:active,
        #burger:focus {
            background-color: #f4f4f5;
            transition: all 0.3s;
        }

    #back {
        display: none;
    }

    @@media (max-width: 800px) {

        .fixed-button {
            display: flex;
            position: absolute;
            bottom: 20px; /* Расположение кнопки от нижнего края */
            right: 20px; /* Расположение кнопки от правого края */
            background-color: #3390ec;
            color: white;
            border: none;
            padding: 15px;
            cursor: pointer;
            z-index: 1000; /* Высокий z-index для отображения поверх других элементов */
            border-radius: 50%;
            transition: all .3s;
        }

        #chat-header {
            z-index: 900;
            display: flex;
            width: 100%;
            align-items: center;
            padding: 10px;
            background-color: white;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        #back {
            display: flex;
            align-items: center;
            border: none;
            outline: none;
            background-color: transparent;
            color: #b2b5b7;
            padding: 10px;
            border-radius: 50%;
            transition: all .3s;
            margin-right: 5px;
        }

            #back:hover {
                background-color: #f4f4f5;
                color: #b2b5b7;
                transition: all .3s;
            }

        #contacts-field {
            display: block; /* Ensure it's set to block to operate the transform */
            position: absolute;
            z-index: 950;
            width: 80%;
            height: 100%;
            background-color: white;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            transform: translateX(-100%);
            transition: transform 0.3s ease-in-out;
            transform: translateX(-100%);
        }

            #contacts-field.show {
                transform: translateX(0);
            }

        .chat-area {
            max-width: 100%;
            border: none;
        }
    }

    @@media (max-width: 1000px) {
        .input-container {
            width: 97%;
        }

        .message-container {
            margin-left: 0px;
            margin-right: 100px;
        }

            .message-container.sent {
                margin-left: 100px;
                margin-right: 0px;
            }
    }

    #editName {
        border-radius: 8px 8px 5px 5px;
    }

    #deleteContact {
        border-radius: 5px 5px 8px 8px;
    }

    
</style>

<div class="main-container">
    <div id="contacts-field">
        <div id="userContextMenu" class="user-context-menu">
            <ul class="menu-list">
                <label>@User.Identity!.Name</label>
                <div>
                    <li id="changeAvatar" style="border-radius: 8px 8px 5px 5px;"><i class="material-icons">edit</i>Profile picture</li>
                    <input type="file" id="avatarInput" style="display: none;" accept="image/*">
                </div>
                <form method="post" asp-controller="Account" asp-action="Logout">
                    <button type="submit" class="dropdown-item"><i class="material-icons">logout</i>Logout</button>
                </form>
                @*                  <li style="border-radius: 5px 5px 8px 8px;"><form method="post" asp-controller="Account" asp-action="Logout"><i class="material-icons">logout</i>Log out</form></li>
                *@
            </ul>
        </div>
        <div class="user-menu">
            <button id="burger"><i class="material-icons">menu</i></button>
            <div class="search-container">
                <i id="searchIcon" class="material-icons">search</i>
                <input id="search" placeholder="Search" oninput="filterContacts()" />
            </div>
        </div>
        <div class="contacts-container" id="contactsContainer"></div>
        <button class="fixed-button" id="show"><i class="material-icons">edit</i></button>
    </div>


<div id="contextMenu" class="context-menu" style="display: none; position: absolute; z-index: 1000;">
    <ul class="menu-list">
        <li id="editName"><i class="material-icons">edit</i>Edit Name</li>
        <li id="deleteContact"><i class="material-icons">delete</i>Delete Contact</li>
    </ul>
</div>

    <div class="chat-area">
        <div id="chat-header">
            <button id="back"><i class="material-icons">arrow_back</i></button>
            <img id="chatHeaderImg" height="36" width="36" style="border-radius: 50%; background-color: white;"/>
            <div id="user-header" style="padding-left: 10px; font-weight: bold;"></div>
        </div>
        <div class="content">
            <ul id="messagesList"></ul>
        </div>
        <div class="bottom-msg-input">
            <div class="input-container">
                <input type="file" id="fileInput" />
                <button type="button" id="uploadButton"><i class="material-icons">attach_file</i></button>
                <input type="text" class="w-100" id="messageInput" placeholder="Message" />
                <button type="button" id="sendButton" disabled>
                    <i class="material-icons">arrow_upward</i>
                </button>
            </div>
        </div>
        <dialog id="dialog">
            <div class="addUserDialog">
                <input type="text" id="contactEmailInput" placeholder="Email" />
                <button class="add" id="addContactButton"><i class="material-icons">add</i></button>
                <button class="close"><i class="material-icons">close</i></button>
            </div>
        </dialog>
        <dialog id="updateDialog">
            <input type="text" id="newDisplayNameDialogInput" placeholder="New Display Name" />
            <button id="saveDisplayNameButton"><i class="material-icons">save</i></button>
            <button class="close"><i class="material-icons">close</i></button>
        </dialog>
    </div>
</div>

<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script src="~/js/chat.js"></script>

<script>
    document.getElementById('burger').addEventListener('click', function (event) {
        const menu = document.getElementById('userContextMenu');
        const isVisible = menu.classList.contains('show');

        // Calculate positioning and set transform origin dynamically
        const rect = event.currentTarget.getBoundingClientRect();
        menu.style.top = `${rect.bottom}px`;
        menu.style.left = `${rect.left}px`;
        menu.style.transformOrigin = `${rect.left - event.pageX + rect.width / 2}px ${rect.bottom - event.pageY}px`;

        // Toggle visibility and animation class
        if (isVisible) {
            menu.classList.replace('show', 'hide');
            setTimeout(() => {
                menu.style.display = 'none'; // Ensures the menu is not clickable after it disappears
                menu.classList.remove('hide');
            }, 100); // Timeout matches the duration of the animation
        } else {
            menu.style.display = 'block'; // Make sure to set display before adding 'show' for the animation to trigger
            menu.classList.add('show');
        }

        // Prevent default behavior and event bubbling
        event.preventDefault();
        event.stopPropagation();
    });

    // Hide the menu when clicking outside
    window.addEventListener('click', function (event) {
        const menu = document.getElementById('userContextMenu');
        if (!menu.contains(event.target) && menu.classList.contains('show')) {
            menu.classList.replace('show', 'hide');
            setTimeout(() => {
                menu.style.display = 'none';
                menu.classList.remove('hide');
            }, 100); // Ensure the menu is hidden after animation
        }
    });

    document.getElementById('back').addEventListener('click', function () {
        var contactsField = document.getElementById('contacts-field');
        // Toggle the 'show' class to slide in or out the contacts panel
        contactsField.classList.toggle('show');
    });

    document.addEventListener('click', function (event) {
        var contactsField = document.getElementById('contacts-field');
        var backButton = document.getElementById('back');

        // Проверка, что клик был вне контактной панели и кнопки "назад"
        if (!contactsField.contains(event.target) && !backButton.contains(event.target)) {
            // Если панель открыта, скрыть её
            if (contactsField.classList.contains('show')) {
                contactsField.classList.remove('show');
            }
        }
    });

    document.getElementById("changeAvatar").addEventListener("click", function () {
        document.getElementById("avatarInput").click();
    });

    document.getElementById("avatarInput").addEventListener("change", function (event) {
        var file = event.target.files[0];
        if (file) {
            var formData = new FormData();
            formData.append("avatar", file);

            fetch("/upload/avatar", {
                method: "POST",
                body: formData
            }).then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert("Avatar updated successfully");
                        // Update avatar on all necessary UI elements
                        var avatars = document.querySelectorAll(".avatar");
                        avatars.forEach(avatar => avatar.src = data.avatarUrl);
                    } else {
                        alert("Error updating avatar: " + data.error);
                    }
                }).catch(error => {
                    console.error("Error uploading avatar:", error);
                });
        }
    });
</script>

