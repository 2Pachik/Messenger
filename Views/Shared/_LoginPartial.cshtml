@using Microsoft.AspNetCore.Identity;
@inject SignInManager<AppUser> signInManager;
@inject UserManager<AppUser> UserManager

@{
    var user = await UserManager.GetUserAsync(User);
    var avatarPath = user?.AvatarPath ?? "/uploads/avatars/default.jpg";
}

<style>
    .navbar-nav {
        font-family: "Inter", sans-serif;
        font-size: 16px;
        font-weight: 600;
        font-style: normal;
        font-variation-settings: "slnt" 0;
    }

    .user-info {
        display: flex;
        align-items: center;
    }

    .navbar-avatar {
        width: 32px;
        height: 32px;
        border: none;
        border-radius: 50%;
        cursor: pointer;
    }
</style>

<ul class="navbar-nav">
    @if (signInManager.IsSignedIn(User))
    {
        <li class="nav-item dropdown user-info">
            <div>
                <img class="navbar-avatar" id="avatarImage" src="@avatarPath" />
                <input type="file" id="avatarInput" style="display: none;" accept="image/*">
            </div>
            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                @User.Identity!.Name
            </a>
            <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
                <li>
                    <form method="post" asp-controller="Account" asp-action="Settings">
                        <button type="submit" class="dropdown-item">Messages</button>
                    </form>
                    <form method="post" asp-controller="Account" asp-action="Settings">
                        <button type="submit" class="dropdown-item">Settings</button>
                    </form>
                    <form method="post" asp-controller="Account" asp-action="Logout">
                        <button type="submit" class="dropdown-item">Logout</button>
                    </form>
                </li>
            </ul>
        </li>
    }
    else
    {
        // Можно добавить альтернативный контент для неавторизованных пользователей
    }
</ul>

<script>
    document.getElementById("avatarImage").addEventListener("click", function () {
        document.getElementById("avatarInput").click();
    });

    document.getElementById("avatarInput").addEventListener("change", function (event) {
        var file = event.target.files[0];
        if (file) {
            var formData = new FormData();
            formData.append("avatar", file);

            fetch("/upload/avatar", {
                method: "POST",
                body: formData
            }).then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert("Avatar updated successfully");
                        // Update avatar on all necessary UI elements
                        var avatars = document.querySelectorAll(".avatar");
                        avatars.forEach(avatar => avatar.src = data.avatarUrl);
                    } else {
                        alert("Error updating avatar: " + data.error);
                    }
                }).catch(error => {
                    console.error("Error uploading avatar:", error);
                });
        }
    });
</script>
